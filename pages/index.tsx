import Head from 'next/head';
import DefaultLayout from '@/layouts/DefaultLayout';
import BookCard from '@/components/BookCard';
import image from '../public/images/book-cover-platon.jpg';
import VideoCard from '@/components/VideoCard';
import QuoteCard from '@/components/QuoteCard';
import GetContentDataAxios from '@/Axios/GetContentDataAxios';
import { useDispatch } from 'react-redux';
import { ADD_CONTENTDATA } from '@/Redux/Reducers/ContentDataSlice';
import { useEffect, useState } from 'react';

export default function Home() {
  const dispatch = useDispatch();
  const [isContentDataLoading, setIsContentDataLoading] = useState(true);
  const [homepageContentDisplay, setHomepageContentDisplay] =
    useState<any>(null);
  const [booksDisplay, setBooks] = useState<any>(null);
  const [quotesDisplay, setQuotes] = useState<any>(null);
  const [videosDisplay, setVideos] = useState<any>(null);

  useEffect(() => {
    if (isContentDataLoading) {
      GetContentDataAxios().then((res: any) => {
        dispatch(ADD_CONTENTDATA(res.contentData));
        setHomepageContent(
          Object.values(res.contentData.homepageContentData).map(
            (el: any, key) => {
              if (el.category === 'book') {
                return (
                  <div key={key} className="-mt-5">
                    <BookCard bookCoverUrl={image} bookData={el} />
                  </div>
                );
              } else if (el.category === 'quote') {
                return (
                  <div key={key} className="-mt-5">
                    <QuoteCard quoteData={el} />
                  </div>
                );
              } else if (el.category === 'video') {
                const validUrl = el.link.replace('watch?v=', 'embed/');
                const videoUrl = `${validUrl}?controls=0`;
                return (
                  <div key={key} className="-mt-5">
                    <VideoCard videoUrl={videoUrl} videoData={el} />
                  </div>
                );
              }
            }
          )
        );
        setBooks(
          Object.values(res.contentData.books).map((book: any, key) => {
            return (
              <div key={key}>
                <BookCard bookCoverUrl={image} bookData={book} />
              </div>
            );
          })
        );
        setVideos(
          Object.values(res.contentData.videos).map((video: any, key) => {
            const validUrl = video.link.replace('watch?v=', 'embed/');
            const videoUrl = `${validUrl}?controls=0`;
            return (
              <div key={key}>
                <VideoCard videoUrl={videoUrl} videoData={video} />
              </div>
            );
          })
        );
        setQuotes(
          Object.values(res.contentData.quotes).map((quote: any, key) => {
            return (
              <div key={key}>
                <QuoteCard quoteData={quote} />
              </div>
            );
          })
        );
        setIsContentDataLoading(false);
      });
    }
  }, []);

  useEffect(() => {
    console.log(homepageContent);
  }, [homepageContent]);

  return (
    <>
      <Head>
        <title>Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <DefaultLayout>
          <div className="flex justify-center">
            <div className="flex-col">
              <h1 className="mb-20">Homepage</h1>
              {homepageContentDisplay}
            </div>
          </div>
        </DefaultLayout>
      </main>
    </>
  );
}
